{"version":3,"sources":["logo.svg","covid-tracker/covid-tracker.js","item/item.js","covid-tracker/states-tracker.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StatesTracker","state","feeds","axios","get","then","res","data","setState","catch","err","console","log","className","this","to","title","statewise","map","item","index","key","deltaconfirmed","confirmed","active","deltarecovered","recovered","deltadeaths","deaths","scope","class","href","target","rel","src","logo","alt","React","Component","Item","props","provinceState","countryRegion","CovidTracker","nationwide","worldwide","value","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6286f4a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport logo from '../logo.svg';\n\nclass StatesTracker extends React.Component {\n  state = {\n    feeds: null\n  }\n  componentDidMount() {\n    axios.get(`https://api.covid19india.org/data.json`)\n    .then(res => {\n        const feeds = res.data ? res.data: null;\n        this.setState({feeds: feeds});\n    })\n    .catch(err => {\n        console.log('Err: ', err);\n    });\n  }\n  render() {\n    return <div className=\"covid-wrapper\">\n        {!this.state.feeds ? <img src={logo} className=\"App-logo\" alt=\"logo\" /> :\n        <section className=\"text-center\">\n           <h4>COVID 19, Coronavirus Tracker in India</h4>\n           <nav className=\"navbar sticky-top navbar-light bg-light\">\n            <Link to=\"/world-tracker\" className=\"navbar-brand\">\n              <u>Worldwide Cases</u></Link>\n            <blockquote className=\"blockquote sticky-top\">\n              <footer className=\"blockquote-footer\">Designed by <cite title=\"Dharmendra Sehgal\">Dharmendra Sehgal</cite></footer>\n            </blockquote>\n           </nav>\n           {this.state.feeds.statewise.map((item, index) => {\n           return (item.state === 'Total' &&\n           <article className=\"row mb-5\" key={index}>\n              <div className=\"col-sm-3 mb-5\">\n                 <div className=\"card bg-danger\">\n                    <div className=\"card-body p-3 text-light\">\n                       <p>Confirmed</p>\n                       <h6><span>{item.deltaconfirmed > 0 && '[+'+ item.deltaconfirmed +']'}</span></h6>\n                       <h5>{ item.confirmed }</h5>\n                    </div>\n                 </div>\n              </div>\n              <div className=\"col-sm-3 mb-5\">\n                 <div className=\"card bg-primary\">\n                    <div className=\"card-body p-3 text-light\">\n                       <p>Active</p>\n                       <h6><span><br /></span></h6>\n                       <h5>{ item.active }</h5>\n                    </div>\n                 </div>\n              </div>\n              <div className=\"col-sm-3 mb-5\">\n                 <div className=\"card bg-success\">\n                    <div className=\"card-body p-3 text-light\">\n                       <p>Recovered</p>\n                       <h6><span>{item.deltarecovered > 0 && '[+'+ item.deltarecovered +']'}</span></h6>\n                       <h5>{ item.recovered }</h5>\n                    </div>\n                 </div>\n              </div>\n              <div className=\"col-sm-3 mb-5\">\n                 <div className=\"card bg-secondary\">\n                    <div className=\"card-body p-3 text-light\">\n                       <p>Deceased</p>\n                       <h6><span>{item.deltadeaths > 0 && '[+'+ item.deltadeaths +']'}</span></h6>\n                       <h5>{ item.deaths }</h5>\n                    </div>\n                 </div>\n              </div>\n           </article>\n           )\n           })\n           }\n           {!this.state.feeds.statewise ? null :\n           <article>\n              <div className=\"text-center\">\n                 <table className=\"m-auto\">\n                    <thead>\n                       <tr>\n                          <th className=\"text-default text-left\" scope=\"col\">State/UT</th>\n                          <th className=\"text-default\" scope=\"col\">Confirmed</th>\n                          <th className=\"text-default\" scope=\"col\">Active</th>\n                          <th className=\"text-default\" scope=\"col\">Recovered</th>\n                          <th className=\"text-default\" scope=\"col\">Deceased</th>\n                       </tr>\n                    </thead>\n                    <tbody>\n                       {this.state.feeds.statewise.map((item, index) => {\n                       return (item.state !== 'Total' &&\n                       <tr key={index}>\n                          <td className=\"text-muted text-left\">{ item.state }</td>\n                          <td className=\"text-muted text-right\"><span className=\"text-danger\">{item.deltaconfirmed > 0 && '[+'+ item.deltaconfirmed +']'}</span> { item.confirmed }</td>\n                          <td className=\"text-muted text-right\">{ item.active }</td>\n                          <td className=\"text-muted text-right\"><span className=\"text-success\">{item.deltarecovered > 0 && '[+'+ item.deltarecovered +']'}</span> { item.recovered }</td>\n                          <td className=\"text-muted text-right\"><span>{item.deltadeaths > 0 && '[+'+ item.deltadeaths +']'}</span> { item.deaths }</td>\n                       </tr>\n                       )\n                       })}\n                    </tbody>\n                 </table>\n              </div>\n              <nav class=\"navbar fixed-bottom navbar-light bg-light\">\n               <span className=\"navbar-brand\"><a className=\"navbar-item\" href=\"https://api.covid19india.org/\" target=\"_blank\" rel=\"noopener noreferrer\">COVID19-India API</a></span>\n              </nav>\n           </article>\n           }\n        </section>\n        }\n    </div>\n  }\n}\nexport default StatesTracker;","import React from 'react';\n\nexport const Item = (props) => {\n    return (\n        <tr>\n          <td className=\"text-left\">{ (props.provinceState !== null ? props.provinceState + ' ' : '')+props.countryRegion }</td>\n          <td className=\"text-right\">{ props.confirmed }</td>\n          <td className=\"text-right\">{ props.deaths }</td>\n          <td className=\"text-right\">{ props.recovered }</td>\n        </tr>\n    );\n};","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport logo from '../logo.svg';\nimport { Item } from '../item/item';\n\nclass CovidTracker extends React.Component {\n  state = {\n    feeds: null,\n    nationwide: null,\n    worldwide: null\n  }\n  componentDidMount() {\n    axios.get(`https://covid19.mathdro.id/api/confirmed`)\n    .then(res => {\n        const feeds = res.data;\n        this.setState({feeds: feeds});\n    })\n    .catch(err => {\n        console.log('Err: ', err);\n    });\n    axios.get(`https://covid19.mathdro.id/api/countries/IN`)\n    .then(res => {\n        const nationwide = res.data;\n        this.setState({nationwide: nationwide});\n    })\n    .catch(err => {\n        console.log('Err: ', err);\n    });\n    axios.get(`https://covid19.mathdro.id/api`)\n    .then(res => {\n        const worldwide = res.data;\n        this.setState({worldwide: worldwide});\n    })\n    .catch(err => {\n        console.log('Err: ', err);\n    });\n  }\n  render() {\n    return <div className=\"covid-wrapper\">\n           {!this.state.feeds ? <img src={logo} className=\"App-logo\" alt=\"logo\" /> :\n           <section>\n              <h5>COVID 19, Coronavirus Tracker</h5>\n              <nav className=\"navbar sticky-top navbar-light bg-light\">\n                 <Link to=\"/covid19-tracker\" className=\"navbar-brand\">\n                 <u>Indian Cases</u></Link>\n                 <blockquote className=\"blockquote sticky-top\">\n                    <footer className=\"blockquote-footer\">Designed by <cite title=\"Dharmendra Sehgal\">Dharmendra Sehgal</cite></footer>\n                 </blockquote>\n              </nav>\n              {!this.state.worldwide ? null :\n              <article>\n                 <div className=\"row mb-5\">\n                    <div className=\"col-sm-4 mb-5\">\n                       <div className=\"card bg-danger\">\n                          <div className=\"card-body text-light\">\n                             <h3 className=\"card-title\">{ this.state.worldwide.confirmed.value }</h3>\n                             <p className=\"card-text\">Confirmed</p>\n                          </div>\n                       </div>\n                    </div>\n                    <div className=\"col-sm-4 mb-5\">\n                       <div className=\"card bg-success\">\n                          <div className=\"card-body text-light\">\n                             <h3 className=\"card-title\">{ this.state.worldwide.recovered.value }</h3>\n                             <p className=\"card-text\">Recovered</p>\n                          </div>\n                       </div>\n                    </div>\n                    <div className=\"col-sm-4 mb-5\">\n                       <div className=\"card bg-secondary\">\n                          <div className=\"card-body text-light\">\n                             <h3 className=\"card-title\">{ this.state.worldwide.deaths.value }</h3>\n                             <p className=\"card-text\">Death</p>\n                          </div>\n                       </div>\n                    </div>\n                 </div>\n              </article>\n              }\n              <div className=\"text-center\">\n                 <table className=\"m-auto\">\n                    <thead className=\"\">\n                       <tr>\n                          <th className=\"text-left\" scope=\"col\">Country/Region</th>\n                          <th scope=\"col\">Confirmed</th>\n                          <th scope=\"col\">Deaths</th>\n                          <th scope=\"col\">Recovered</th>\n                       </tr>\n                    </thead>\n                    <tbody>\n                       {this.state.feeds.map((item, index) => {\n                       return (\n                       <Item {...item} key={index} />\n                       )\n                       })}\n                    </tbody>\n                 </table>\n              </div>\n           </section>\n           }\n        </div>\n  }\n}\nexport default CovidTracker;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nimport CovidTracker from './covid-tracker/covid-tracker';\nimport StatesTracker from './covid-tracker/states-tracker';\n\nfunction App() {\n  return (\n    <div className=\"App m-5\">\n      <header className=\"App-header\">\n        <Router>\n            <Switch>\n              <Route exact path=\"/\">\n                <CovidTracker />\n              </Route>\n              <Route exact path=\"/covid19-tracker\">\n                <CovidTracker />\n              </Route>\n              <Route path=\"/world-tracker\">\n                <StatesTracker />\n              </Route>\n            </Switch>\n        </Router>\n      </header>\n      <nav class=\"navbar fixed-bottom navbar-light bg-light\">\n       <span className=\"navbar-brand\">Data sources from <a className=\"navbar-item\" href=\"https://github.com/mathdroid/covid-19-api\" target=\"_blank\" rel=\"noopener noreferrer\">COVID-19 global data (from JHU CSSE for now) as-a-service</a></span>\n      </nav>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}